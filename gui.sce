// -----------------------------------------------------------------------------------------------------
//eYSIP-2015
//PC Controlled Two Wheel Balanced Bot
//Author List: B Suresh, Ramiz Hussain, Devendra Kr Jangid
//Mentors: Piyush Manavar, Saurav Shandilya
//-----------------------------------------------------------------------------------------------------
//INITIALISATION:
// 1.Go to the directory containing "slLoadLib.sci".
// 2.Execute the "slLoadLib.sci" file to load the library.
// 3.Enter the COMPORT number in the beginning of the following code(this can be obtained from 'Device 
//   Manager' in Windows)
// 4.Execute this gui file.
//-----------------------------------------------------------------------------------------------------
//This is a GUI created for tuning and controlling the 2-wheel Balance-Bot 
// >>Kp, Ki, Kd can be tuned and the Setpoint(Balance angle) can be changed using this GUI 
// >>Forward,backward,right,left can also be controlled
// >>STOP button needs to be used in order to close the window and terminate the current session
//----------------------------------------------------------------------------------------------------- 
//This code uses the SISELI serial library Version 0.7 for serial communication
//GUI Builder 3.0 is used to create the user interface entities
//-----------------------------------------------------------------------------------------------------





//-----------------------------------------------------------------------------------------------------
//PARAMETERS    	-->  CHARACTER(received through Zigbee)		para_flag
//-----------------------------------------------------------------------------------------------------
//	Kp 		    	--		7									1
//	Ki				--		8									2
//	Kd		    	--	    9									3
//Setpoint			--		0									4
//increment by 0.1	--		3
//decrement by 0.1	--		6
//increment by 1	--		1
//decrement by 1	--		4
//increment by 5	--		2
//decrement by 5	--		5
//Forward			--		w
//Backward			--		x
//left				--		a
//right				--		d
//balance			--		s







COMPORT=8;
// mount library on handle "h"
h=slMount();

// handle "h": check availability of specified COM port
slCheck(h,COMPORT);

// handle "h": configure port
slConfig(h,9600,8,0,1);

// handle "h": open port
if slOpen(h,COMPORT) then
    printf("Port 8 open\n")
else
    printf("Port over board!\n")
    abort;
end

// This GUI file is generated by guibuilder version 3.0
//////////
f=figure('figure_position',[600,50],'figure_size',[656,532],'auto_resize','on','background',[33],'figure_name','Balance Bot ');
//////////
delmenu(f.figure_id,gettext('File'))
delmenu(f.figure_id,gettext('?'))
delmenu(f.figure_id,gettext('Tools'))
toolbar(f.figure_id,'off')
handles.dummy = 0;
handles.inc_lil=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.5,0.6,0.1,0.1],'Relief','default','SliderStep',[0.01,0.1],'String','+0.1','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','inclil','Callback','inclil_callback(handles)')
handles.dec_lil=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.3,0.6,0.1,0.1],'Relief','default','SliderStep',[0.01,0.1],'String','-0.1','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','declil','Callback','declil_callback(handles)')
handles.inc_more=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.5,0.5,0.1,0.1],'Relief','default','SliderStep',[0.01,0.1],'String','+5','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','incmore','Callback','incmore_callback(handles)')
handles.dec_more=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.3,0.5,0.1,0.1],'Relief','default','SliderStep',[0.01,0.1],'String','-5','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','decmore','Callback','decmore_callback(handles)')
handles.inc=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.5,0.4,0.1,0.1],'Relief','default','SliderStep',[0.01,0.1],'String','+1','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','inc','Callback','inc_callback(handles)')
handles.dec=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.3,0.4,0.1,0.1],'Relief','default','SliderStep',[0.01,0.1],'String','-1','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','dec','Callback','dec_callback(handles)')
handles.list=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[1],'Max',[1],'Min',[0],'Position',[0.4015625,0.7091189,0.0984375,0.20],'Relief','default','SliderStep',[0.01,0.1],'String','Kp|Ki|Kd|F/B','Style','listbox','Value',[3],'VerticalAlignment','middle','Visible','on','Tag','list','Callback','list_callback(handles)')
handles.right =uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.5,0.2,0.1,0.1],'Relief','default','SliderStep',[0.01,0.1],'String','>>','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','right ','Callback','right_callback(handles)')
handles.bal=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.4,0.2,0.1,0.1],'Relief','default','SliderStep',[0.01,0.1],'String','o','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','bal','Callback','bal_callback(handles)')
handles.left=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.3,0.2,0.1,0.1],'Relief','default','SliderStep',[0.01,0.1],'String','<<','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','left','Callback','left_callback(handles)')
handles.stopb=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.8,0,0.1,0.1],'Relief','default','SliderStep',[0.01,0.1],'String','STOP','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','stopb','Callback','stopb_callback(handles)')
handles.forward=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.4,0.3,0.1,0.1],'Relief','default','SliderStep',[0.01,0.1],'String','^','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','forward','Callback','forward_callback(handles)')
handles.backward=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.4,0.1,0.1,0.1],'Relief','default','SliderStep',[0.01,0.1],'String','v','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','backward','Callback','backward_callback(handles)')

//////////
// Callbacks are defined as below. Please do not delete the comments as it will be used in coming version
//////////



function inclil_callback(handles)
//Write your callback for  inc_lil  here
slSendByte(h,ascii("3"));
endfunction


function declil_callback(handles)
//Write your callback for  dec_lil  here
slSendByte(h,ascii("6"));
endfunction


function incmore_callback(handles)
//Write your callback for  inc_more  here
slSendByte(h,ascii("2"));
endfunction


function decmore_callback(handles)
//Write your callback for  dec_more  here
slSendByte(h,ascii("5"));
endfunction


function inc_callback(handles)
//Write your callback for  inc  here
slSendByte(h,ascii("1"));
endfunction


function dec_callback(handles)
//Write your callback for  dec  here
slSendByte(h,ascii("4"))
//disp(4);
endfunction


function list_callback(handles)
//Write your callback for  list  here
//data=ascii(get(h,'value'));
data=get(handles.list,'value');
if data ==4 then
    slSendByte(h,48);
else
    slSendByte(h,data+54);
end

//disp(data);
endfunction

function right_callback(handles)
//Write your callback for  right  here
slSendByte(h,ascii("d"));
endfunction

function bal_callback(handles)
//Write your callback for  bal  here
slSendByte(h,ascii("s"));
endfunction

function left_callback(handles)
//Write your callback for  left  here
slSendByte(h,ascii("a"));
endfunction

function forward_callback(handles)
//Write your callback for  forward  here
slSendByte(h,ascii("w"));
endfunction


function backward_callback(handles)
//Write your callback for  backward  here
slSendByte(h,ascii("x"));
endfunction

function stopb_callback(handles)
//Write your callback for  stopb  here
//slClose(h);
slUMount(h);                        //Close port
close(f);                           //Close Window
abort;                              //Stop execution
endfunction

